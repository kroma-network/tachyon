load("//bazel:tachyon_cc.bzl", "tachyon_cc_library", "tachyon_cc_test")

package(default_visibility = ["//visibility:public"])

tachyon_cc_library(
    name = "division_result",
    hdrs = ["division_result.h"],
    deps = ["@com_google_absl//absl/strings"],
)

tachyon_cc_library(
    name = "groups",
    hdrs = ["groups.h"],
    deps = [":monoids"],
)

tachyon_cc_library(
    name = "gmp_util",
    srcs = ["gmp_util.cc"],
    hdrs = ["gmp_util.h"],
    deps = [
        "//tachyon/base:logging",
        "//tachyon/base/strings:string_util",
        "//tachyon/build:build_config",
        "//tachyon/math/base:sign",
        "@com_google_absl//absl/base",
        "@local_config_gmp//:gmp",
    ],
)

tachyon_cc_library(
    name = "field",
    hdrs = ["field.h"],
    deps = [":rings"],
)

tachyon_cc_library(
    name = "identities",
    hdrs = ["identities.h"],
)

tachyon_cc_library(
    name = "monoids",
    hdrs = ["monoids.h"],
    deps = [
        ":gmp_util",
        "@com_google_absl//absl/types:span",
    ],
)

tachyon_cc_library(
    name = "rings",
    hdrs = ["rings.h"],
    deps = [
        ":groups",
        "//tachyon/base:template_util",
    ],
)

tachyon_cc_library(
    name = "sign",
    srcs = ["sign.cc"],
    hdrs = ["sign.h"],
    deps = [
        "//tachyon/base:logging",
        "//tachyon/base/strings:string_util",
    ],
)

tachyon_cc_test(
    name = "base_unittests",
    srcs = [
        "gmp_util_unittest.cc",
        "sign_unittest.cc",
    ],
    deps = [
        ":gmp_util",
        ":sign",
    ],
)
