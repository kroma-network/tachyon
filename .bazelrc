# Tachyon Bazel configuration file.
# This file tries to group and simply build option for Tachyon
#
# ----CONFIG OPTIONS----
#
# Other build options:
#     dbg:       Build with debug info
#
# 3rd party library options:
#     gmp_backend: Use a prime field with gmp backend.
#
# Hardware support options:
#     cuda: Build with NVIDIA GPU support (cuda).
#     rocm: Build with AMD GPU support (rocm).
#
# Default build options. These are applied first and unconditionally.

# For projects which use Tachyon as part of a Bazel build process, putting
# nothing in a bazelrc will default to a monolithic build. The following line
# opts in to modular op registration support by default.
build -c opt

# Make Bazel print out all options from rc files.
build --announce_rc

# This config refers to building CUDA op kernels with nvcc.
build:cuda --repo_env TACHYON_NEED_CUDA=1
build:cuda --crosstool_top=@local_config_cuda//crosstool:toolchain
build:cuda --@local_config_cuda//:enable_cuda

# This config refers to building CUDA op kernels with clang.
# NOTE(chokobole): I didn't test it, though!
build:cuda_clang --config=cuda
build:cuda_clang --repo_env TACHYON_CUDA_CLANG=1
build:cuda_clang --@local_config_cuda//:cuda_compiler=clang

# This config refers to building ROCM op kernels.
build:rocm --crosstool_top=@local_config_rocm//crosstool:toolchain
build:rocm --define=using_rocm_hipcc=true
build:rocm --define=tensorflow_mkldnn_contraction_kernel=0
build:rocm --repo_env TF_NEED_ROCM=1

# Debug config
build:dbg -c dbg

# By default, build Tachyon in C++ 17 mode.
build:linux --cxxopt=-std=c++17
build:macos --cxxopt=-std=c++17
build:windows --cxxopt=/std:c++17

# Enable googletest build with absl.
# See https://github.com/google/googletest/blob/v1.13.0/BUILD.bazel#L67C1-L70
build --define absl=1

# gmp needs exception.
build --//:has_exception

# Enable gmp backend for prime field.
build:gmp_backend --//:gmp_backend

test --test_tag_filters -benchmark,-manual

# Config-specific options should come above this line.

# Load rc file with user-specific options.
try-import %workspace%/.bazelrc.user
